/*
 * Itse määritellyn formaatin mukaisen CSV-tiedoston tuottaminen Archista. Tuottaa listauksen 
 * tietojärjestelmistä ja niiden tietovarannoista sekä muutamasta muusta kentästä hyödyntäen
 * Papa Parse kirjastoa.
 */

"use strict";
console.show(); 
console.log("> Tuotetaan listaus tietojärjestelmistä ja niihin liittyvistä prosesseista...");

load(__SCRIPTS_DIR__ + "~lib/Yhteiset apufunktiot.ajs");
load(__SCRIPTS_DIR__ + "~lib/papaparse.min.js");
console.log("> Loaded Papa Parse");

//var viemyoskentat = ["Järjestelmäsalkku ID", "Avointen rajapintojen kuvaus", "Tietojen saatavuus avoimella rajapinnalla", "Kuvaileva nimi", "Kuvailevaksi nimeksi", "Virallinen", "_JärjestelmäsalkunVapaateksti", "_Lisätieto", "_NimiSalkussa", "_Vastuuhenkilö", "_Yhteyshenkilö", "Yhteyshenkilö"];
//var viemyoskentat = ["Julkinen nimi", "Tietoaineistot", "Hakutekijät", "Tietojen saatavuus avoimella rajapinnalla", "Asiarekisteri", "Kriittisyys"];

var viemyoskentat = [ ];

var exportFile = window.promptSaveFile({ title: "Export to CSV", filterExtensions: [ "*.csv" ], fileName: "tietojäjestelmät-prosessit.csv" } );
if (!exportFile) {
  console.log("> Vienti peruttiin");
  exit();
}

console.log("> Tallennetaan CSV");

var csvData = [];
var maxVarannot = 0;
$("application-component").filter(fth).each(function (jarj) {
  if (jarj.prop("Virallinen") == "F") return; // ei listata selvitettäviä
  if (jarj.prop("_JärjestelmäsalkunVapaateksti") == "1") return; // ei salkun liittymien vapaatekstejä
  var prosessit = $("#" + jarj.id).outRels("serving-relationship").targetEnds("business-process").filter(fth);
  prosessit.sort(tunnistecompare);
  if (prosessit.size() > maxVarannot) maxVarannot = prosessit.size();
  var toimiala = "Muut";
  var omistaja = $("#"+jarj.id).inRels("association-relationship.vastaa").sourceEnds("business-actor").filter(fth).first();
  if (omistaja) {
    if (omistaja.prop("Sisäinen/ulkoinen") == "ulkoinen") toimiala = "Ulkoinen";
      else if (omistaja.prop("Toimiala")) toimiala = omistaja.prop("Toimiala");
  }
  var paajarj = $("#" + jarj.id).inRels("composition-relationship").sourceEnds("application-component").filter(fth).first();

  var datarow = {};
  datarow["Toimiala"] = toimiala;
  datarow["Omistaja"] = omistaja ? omistaja.name : "EI OMISTAJAA";
  datarow["Pääjärjestelmä"] = paajarj ? paajarj.name : "";
  datarow["Tietojärjestelmä"] = jarj.name;
  datarow["Julkinen nimi"] = jarj.prop("Julkinen nimi");

  //datarow["Archi-ID"] = jarj.id;
  //datarow["Kuvaus"] = jarj.documentation;
  var prosessit_txt = "";
  var i = 1;
  prosessit.each(function (prosessi) {
    if (i > 1) prosessit_txt += "\n";
    prosessit_txt += prosessi.name;
    i++;
  });
  datarow["Prosessit"] = prosessit_txt;

  for (var i = 0; i < viemyoskentat.length; i++) {
    datarow[viemyoskentat[i]] = jarj.prop(viemyoskentat[i]);
  }
  csvData.push(datarow);
});

var csvHeaders = [
    "Toimiala",
    "Omistaja",
    "Pääjärjestelmä",
    "Tietojärjestelmä",
    "Julkinen nimi",
    "Prosessit"
];
for (var i = 0; i < viemyoskentat.length; i++) {
  csvHeaders.push(viemyoskentat[i]);
}

var theCSV = Papa.unparse({fields:csvHeaders, data:csvData});

$.fs.writeFile(exportFile, theCSV);

console.log("> Valmis");
console.log();
