/*
 * New Archi Script
 */

console.show();

console.log("> Listataan tehtäväluokkien yhteydet prosesseihin, tietovarantoihin ja tietojärjestelmiin");
load(__SCRIPTS_DIR__ + "~lib/Yhteiset apufunktiot.ajs");
load(__SCRIPTS_DIR__ + "~lib/papaparse.min.js");
console.log("> Loaded Papa Parse");

function kasitteleTehtluokat(_tehtluokat, _taso, _tulostusfunktio) {
  _tehtluokat.each(function (_tl) {
    _tulostusfunktio(_tl, _taso);
    _alitehtluokat = $("#" + _tl.id).inRels("specialization-relationship").sourceEnds("business-function").filter(fth);
    if (_alitehtluokat.size()) {
      _alitehtluokat.sort(tunnistecompare);
      kasitteleTehtluokat(_alitehtluokat, _taso + 1, _tulostusfunktio);
    }
  });
}

var exportFile = window.promptSaveFile({ title: "Export to CSV", filterExtensions: ["*.csv"], fileName: "tehtavaluokkien_yhteydet.csv" });
if (!exportFile) {
  console.log("> Vienti peruttiin");
  exit();
}

console.log("> Tallennetaan CSV");

csvData = [];

tehtluokat = $("folder.Business").children("folder.Tiedonhallintamalli").children("folder.Tehtäväluokat").children("business-function").filter(fth);
tehtluokat.sort(tunnistecompare);

kasitteleTehtluokat(tehtluokat, 1, function (tl, taso) {
  console.log("- käsitellään tehtäväluokkaa " + tl.name);
  var inrels = $("#" + tl.id).inRels("serving-relationship");
  rels = inrels.filter(function (rel) {
    return rel.source.type == "business-process" && fth(rel.source);
  });
  rels.sort(function (left, right) {
    return tunnistecompare(left.source, right.source);
  });
  var tvrels = inrels.filter(function (rel) {
    return rel.source.type == "product" && fthHaving({ "_Tietovaranto": "1" })(rel.source);
  });
  tvrels.sort(function (left, right) {
    return namecompare(left.source, right.source);
  });
  rels.add(tvrels);
  var tjrels = inrels.filter(function (rel) {
    return rel.source.type == "application-component" && fth(rel.source);
  });
  tjrels.sort(function (left, right) {
    return namecompare(left.source, right.source);
  });
  rels.add(tjrels);
  rels.each(function (rel) {
    //console.log("Käsitellään relaatiota " + rel.source.name + " -> " + rel.target.name);
    datarow = {};
    datarow["Taso"] = taso;
    datarow["Nimi"] = tl.name;
    switch (rel.source.type) {
      case "business-process":
        datarow["Tyyppi"] = "prosessi";
        break;
      case "product":
        datarow["Tyyppi"] = "tietovaranto";
        break;
      case "application-component":
        datarow["Tyyppi"] = "tietojärjestelmä";
        break;
    }
    datarow["Kohde"] = rel.source.name;
    if (rel.prop("Lähde")) datarow["Tietolähde"] = rel.prop("Lähde");
    csvData.push(datarow);
  });
});

/*function kasittelyfunktioVanha(tyyppinimi, haeservingrelaatiot) {
  return function (tl, taso) {
    console.log("Käsitellään tehtäväluokkaa " + tl.name + " tasolla " + taso + " tyypillä " + tyyppinimi);
    var relaatiot = haeservingrelaatiot(tl);
    relaatiot.each(function (rel) {
      console.log("Käsitellään relaatiota " + rel.source.name + " -> " + rel.target.name);
      datarow = {};
      datarow["Taso"] = taso;
      datarow["Nimi"] = tl.name;
      datarow["Tyyppi"] = tyyppinimi;
      datarow["Kohde"] = rel.source.name;
      if (rel.prop("Lähde")) datarow["Tietolähde"] = rel.prop("Lähde");
      csvData.push(datarow);
    });
  }
};


kasitteleTehtluokat(tehtluokat, 1, kasittelyfunktio("prosessi", function (tl) {
  var rels = $("#" + tl.id).inRels("serving-relationship").filter(function (rel) {
    return rel.source.type == "business-process" && fth(rel.source);
  });
  rels.sort(function (left, right) {
    return tunnistecompare(left.source, right.source);
  });
  return rels;
}));

/*
console.log("> Käsitellään prosessit");
kasitteleTehtluokat(tehtluokat, 1, kasittelyfunktio("prosessi", function (tl) {
  var rels = $("#" + tl.id).inRels("serving-relationship").filter(function (rel) {
    return rel.source.type == "business-process" && fth(rel.source);
  });
  rels.sort(function (left, right) {
    return tunnistecompare(left.source, right.source);
  });
  return rels;
}));

console.log("> Käsitellään tietovarannot");
kasitteleTehtluokat(tehtluokat, 1, kasittelyfunktio("tietovaranto", function (tl) {
  var rels = $("#" + tl.id).inRels("serving-relationship").filter(function (rel) {
    return rel.source.type == "product" && fthHaving({ "_Tietovaranto": "1" })(rel.source);
  });
  rels.sort(function (left, right) {
    return namecompare(left.source, right.source);
  });
  return rels;
}));

console.log("> Käsitellään tietojärjestelmät");
kasitteleTehtluokat(tehtluokat, 1, kasittelyfunktio("tietojärjestelmä", function (tl) {
  var rels = $("#" + tl.id).inRels("serving-relationship").filter(function (rel) {
    return rel.source.type == "application-component" && fth(rel.source);
  });
  rels.sort(function (left, right) {
    return namecompare(left.source, right.source);
  });
  return rels;
}));*/


var csvHeaders = ["Taso", "Nimi", "Tyyppi", "Kohde", "Tietolähde"];
var theCSV = Papa.unparse({fields:csvHeaders, data:csvData});
$.fs.writeFile(exportFile, theCSV);

console.log("> CSV tallennettu");


console.log("> Valmis");
console.log();
