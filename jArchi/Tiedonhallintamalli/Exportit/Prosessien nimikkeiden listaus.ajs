/*
 * New Archi Script
 */

"use strict";

console.show();
console.clear();

console.log("> Prosessien nimikkeiden listaus");
load(__SCRIPTS_DIR__ + "~lib/Yhteiset apufunktiot.ajs");
load(__SCRIPTS_DIR__ + "~lib/papaparse.min.js");
console.log("> Loaded Papa Parse");

var viemyoskentat = ["Koskee asianhallintaa", "Koskee palvelua", "Omistaja", "Omistuksen lisätieto", "_VanhaTunniste", "_TunnistePäivitetty", "_NimiPäivitetty", "_Poistuneeksi merkitty"];

function kasitteleProsessit(_prosessit, _taso, _tulostusfunktio) {
  _prosessit.each(function (_pros) {
    _tulostusfunktio(_pros, _taso);
    var _aliprosessit = $("#"+_pros.id).inRels("specialization-relationship").sourceEnds("business-process");
    if (_aliprosessit.size()) {
      _aliprosessit.sort(tunnistecompare);
      kasitteleProsessit(_aliprosessit, _taso + 1, _tulostusfunktio);
    }
  });
}

var prosessimap = {};  // käytetään etsimään hierarkian ulkopuolelle jääviä
$("business-process").filter(fth).each(function (pros) {
  prosessimap[pros.id] = pros;
});

var exportFile = window.promptSaveFile({ title: "Export to CSV", filterExtensions: [ "*.csv" ], fileName: "prosessinimikkeet.csv" } );
if (!exportFile) {
  console.log("> Vienti peruttiin");
  exit();
}

console.log("> Tallennetaan CSV");

var csvData = [];
var maxTaso = 0;

var prosessit = $("folder.Business").children("folder.Tiedonhallintamalli").children("folder.Prosessihierarkia").children("business-process");
prosessit.sort(tunnistecompare);
kasitteleProsessit(prosessit, 1, function (pros, taso) {
  var valit = "";
  for (var i = 1; i < taso; i++) valit += "  ";
  console.log(valit + pros.name);
  
  if (taso > maxTaso) maxTaso = taso;
  var datarow = {};
  datarow["Taso " + taso] = pros.name;

  for (var i = 0; i < viemyoskentat.length; i++) {
    datarow[viemyoskentat[i]] = pros.prop(viemyoskentat[i]);
  }

  csvData.push(datarow);
  delete prosessimap[pros.id];
});

/* Ylemmän tason nimikkeiden täyttäminen alemman tason riveille - helpottaa suodattamista excelissä - voi jättää pois jos haluaa "harvan" taulukon */
var ylemmat = [];
for (var i = 0; i < csvData.length; i++) {
  var datarow = csvData[i];
  for (var j = 1; j <= maxTaso; j++) {
    if (datarow["Taso " + j]) {
      ylemmat[j] = datarow["Taso " + j];
      break;
    } else {
      datarow["Taso " + j] = ylemmat[j];
    }
  }
}

var csvHeaders = [];
for (var i = 1; i <= maxTaso; i++) {
  csvHeaders.push("Taso " + i);
}
for (var i = 0; i < viemyoskentat.length; i++) {
  csvHeaders.push(viemyoskentat[i]);
}

var theCSV = Papa.unparse({fields:csvHeaders, data:csvData});
$.fs.writeFile(exportFile, theCSV);

console.log("> CSV tallennettu");

console.log("> Luetellaan orvot prosessit");
for (var prosid in prosessimap) {
  console.log("- " + prosessimap[prosid].name);
}

console.log("> Valmis");
console.log();

